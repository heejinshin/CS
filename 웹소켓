## 웹소켓 등장배경 
- 클라이언트가 서버에 데이터 요청을 하는데, 요청을 해야 응답을 받을 수 있고 이걸 반복해야 하다보니, 
- 빠른 시간에 데이터를 띄워야 하는 주식 프로그램 같은 것에선 이게 비효율적. 
- 그 해결방안이 이제 서버 Sent Event와 Web Socket인건데, 전자는 HTTP 통신을 종료하지 않고 유지하는 방법이고, 웹소켓은 서버와 유저가 양방향 통신 할 수 있게 하는 방법.

## 작동원리 
- 클라이언트, 서버간 약속 필요. 일명 핸드쉐이크 
- 클라이언트가 HTTP 프로토콜로 서버에 웹 소켓 열기 핸드쉐이크 요청 -> 서버의 핸드세이크 수락 응답 
- TCP/IP 연결 기반 동작 
  - 프로토콜의 집합
    - 응용계층 ( FTP, HTTP, SSH)
    - 전송계층 (TCP, UDP)
    - 인터넷 계층 ( IP, ARP, RARP)
    - 네트워크 엑세스 (LAN, 패킷망,)

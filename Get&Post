
1-2) GET과 POST를 중점적으로 HTTP 요청 메서드에 대해 
3) 먼저 HTTP란, 클라이언트와 서버가 서로 요청과 응답을 주고 받도록 하는 통신 프로토콜이다. 가령 브라우저가 화면에 띄울 컨텐츠를 서버에 요청하면 서버가 요청받은 컨텐츠를 응답해주는 식이다. 
- HTTP 메서드
 클라이언트가 서버에 데이터를 요청하는 방식이다. 
 요청을 할 때 전달하는 요청 정보안에 메서드를 담아 요청의 목적을 표시한다. 기본적으로 GET, POST만 가지고 모든 걸 할 수 있다. 
 여기에 DELETE, PUT 과 같은 메서드를 추가하여 요청을 할 때 의미를 좀 더 명확히 하자는 목적을 뒀다. 이런 방식의 형태를 RESTAPI라고 한다. 
- GET, POST가 이제 대표적인 메서드인건데, 클라이언트가 서버에 요청을 할 때 그 방식에 따라 구분한다. 
1) GET요청은 무언가를 얻기 위함이다. 서버에 특정 데이터를 요청한다. ex) 링크를 클릭하거나 검색할 때 검색창, 체크박스에 값을 전송할 는 거, 그 외 입력상자 등이 쓰일 떄. 
2) POST는 서버에 데이터를 주는게 목적이다. 데이터를 주고 이걸 가지고 특정 행동을 하라는 메시지를 준다. 

 요청 방식에 따라 나뉘는데 GET은 요청 url 뒤에 정보를 붙여서 보내는 방식이고 POST는 요청 본문에 컨텐츠를 담아 전송하는 방식이다.  
 근데 이제 여기서 알아야할 부분은 HTTP 가 어떤 포맷으로 동작하는지 이다. 요청을 하든 응답을 하든 HTTP 헤더와 BOdy 가 구분이 되어있는데 헤더에는 요청정보, 응답 정보가 담길 수 있고
 BodY에는 POST 요청시의 컨텐츠가 담긴다. GET일 때는 Body가 비어있게 된다. POST 요청시엔 본문에 요청이 담기기 때문에 데이터의 길이에 제한이 없다.

* HTTP와 HTTPS의 차이
 hTTPS는 암호화 가능한 프로토콜이 추가된 것이라고 본다. 
이렇게 요청 형식에 맞춰 클라이언트와 서버가 데이터를 주고받는 다는 것이 중요한 것 같다. 뭔가 차이점을 두고 이해하기보다 흐름에 익숙해진는게 포인트인듯 ,  
RESTAPI에 중점을 두고 이해하면서 GET은 정보를 가져온느거 POST는 저장할 정보를 주는거 이렇게만 이해했더니, 정작 오픈 API를 갖다 쓰려고 할 땐 정보를 전달하는 방식의 차이를 기반으로 쓰여서 내가 이해한 개념이 헷갈렸었다. 


